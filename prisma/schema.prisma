generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Case {
  caseId       String  @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String
  name         String
  type         String
  filesCount   Int
  daysLeft     Int
  uploadStatus Int
  team         String[]
  attachments  Boolean  @default(false)
  User         User     @relation(fields: [userId], references: [cognitoId])
  chats        Chat[]
  files        File[]
  notes        Note[]
}

model Chat {
  chatId    String  @id @default(uuid())
  caseId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  case      Case      @relation(fields: [caseId], references: [caseId])
  messages  Message[]
  summary   Summary[]
}

model Summary {
  summaryId          String        @id @default(uuid())
  chatId      String
  title       String
  description String
  chat        Chat          @relation(fields: [chatId], references: [chatId])
  items       SummaryItem[]
}

model SummaryItem {
  summaryItemId        String  @id @default(uuid())
  summaryId String
  label     String
  summary   Summary @relation(fields: [summaryId], references: [summaryId])
}

model Message {
  messageId String  @id @default(uuid())
  chatId    String
  createdAt DateTime @default(now())
  userId    String
  content   String
  chat      Chat     @relation(fields: [chatId], references: [chatId])
  user      User     @relation(fields: [userId], references: [cognitoId])
}

model Note {
  noteId    String  @id @default(uuid())
  caseId    String
  createdAt DateTime @default(now())
  userId    String
  content   String
  case      Case     @relation(fields: [caseId], references: [caseId])
  user      User     @relation(fields: [userId], references: [cognitoId])
}

model File {
  fileId         String  @id @default(uuid())
  caseId         String
  name           String
  type           String
  size           Int
  cleaningStatus Int
  clean          Boolean  @default(false)
  createdAt      DateTime @default(now())
  file           String
  case           Case     @relation(fields: [caseId], references: [caseId])
}

model User {
  userId    String   @default(uuid())
  cognitoId String    @id
  name      String
  Case      Case[]
  message   Message[]
  note      Note[]
  session   Session[]
}

model Session {
  sessionId   String  @id @default(uuid())
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [cognitoId]) 
  userId      String
}
