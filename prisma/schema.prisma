// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Case {
  id                    String      @id @default(uuid())
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  name                  String
  type                  String
  filesCount            Int
  daysLeft              Int
  uploadStatus          Int
  team                  String[]
  attachments           Boolean     @default(false)
  chats                 Chat[]
  notes                 Note[]
  files                 File[]
}


model Chat {
  id                    String      @id @default(uuid())
  case                  Case        @relation(fields: [caseId], references: [id])
  caseId                String
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @default(now())
  summary               Summary[]
  messages              Message[]
    
}

model Summary {
  id                    String      @id @default(uuid())
  chat                  Chat        @relation(fields: [chatId], references: [id])
  chatId                String
  title                 String
  description           String
  items                 SummaryItem[]
}

model SummaryItem {
  id                    String      @id @default(uuid())
  summary               Summary     @relation(fields: [summaryId], references: [id])
  summaryId             String
  label                 String
}

model Message {
  id                    String      @id @default(uuid())
  chat                  Chat        @relation(fields: [chatId], references: [id])
  chatId                String
  createdAt             DateTime    @default(now())
  user                  User        @relation(fields: [userId], references: [id])
  userId                String
  content               String
}

model Note {
  id                     String     @id @default(uuid())
  case                   Case       @relation(fields: [caseId], references: [id])
  caseId                 String
  createdAt              DateTime   @default(now())
  user                   User       @relation(fields: [userId], references: [id])
  userId                 String
  content                String
}

model File {
  id                     String        @id @default(uuid())
  case                   Case          @relation(fields: [caseId], references: [id])
  caseId                 String
  name                   String
  type                   String
  size                   Int
  cleaningStatus         Int
  clean                  Boolean       @default(false)
  createdAt              DateTime      @default(now())
  file                   String
}

model User {
  id                     String        @id @default(uuid())
  name                   String
  message                Message[]
  note                   Note[]
}